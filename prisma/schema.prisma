generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model consultant {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  user_id     String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functional_nutritionist {
  id          String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  meal_plan   meal_plan[]
}

model meal_plan {
  id                      String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                    String                   @db.VarChar(255)
  description             String?                  @db.VarChar(255)
  nutritionist_id         String?                  @db.Uuid
  patient_id              String?                  @db.Uuid
  created_at              DateTime                 @default(now()) @db.Timestamp(6)
  updated_at              DateTime                 @default(now()) @db.Timestamp(6)
  functional_nutritionist functional_nutritionist? @relation(fields: [nutritionist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  patient                 patient?                 @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model patient {
  id          String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String      @db.VarChar(255)
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  user_id     String?     @db.Uuid
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  meal_plan   meal_plan[]
  user        user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                   String                    @unique @db.VarChar(255)
  firstName               String?                   @db.VarChar(255)
  lastName                String?                   @db.VarChar(255)
  roq_user_id             String                    @db.VarChar(255)
  tenant_id               String                    @db.VarChar(255)
  created_at              DateTime                  @default(now()) @db.Timestamp(6)
  updated_at              DateTime                  @default(now()) @db.Timestamp(6)
  consultant              consultant[]
  functional_nutritionist functional_nutritionist[]
  patient                 patient[]
}
